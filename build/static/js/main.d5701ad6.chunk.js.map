{"version":3,"sources":["components/imgs/loadingSpinner.svg","actions/layoutActions.js","config/keys.js","actions/errorActions.js","actions/locationActions.js","actions/weatherActions.js","components/forms/LoadingSpinner.js","components/layout/Header.js","components/layout/MainContainer.js","components/layout/MapContainer.js","components/forms/List.js","components/layout/Drawer.js","components/forms/MyLocationButton.js","components/forms/AutoCompleteDropDown.js","components/layout/LocationModal.js","reducers/errorsReducer.js","reducers/layoutReducer.js","reducers/locationsReducer.js","reducers/index.js","store.js","serviceWorker.js","index.js","App.js"],"names":["module","exports","__webpack_require__","p","setLoading","action","dispatch","type","payload","showLeft","setModal","OWMurl","OWMkey","gMapKey","addError","setTimeout","clearErrors","addLocationToList","setCurrentLocation","locations","localStorage","name","trim","toLowerCase","includes","setItem","getWeatherByCity","city","url","Axios","get","then","result","data","catch","err","console","log","mylocation","finally","LoadingSpinner","react_default","a","createElement","className","title","alt","src","spinner","connect","state","currentLocation","isLoading","layout","_ref","showingLocation","Object","keys","length","split","toUpperCase","onClick","header","MainContainer","list","filter","item","this","props","setLocationList","main","temp","weather","concat","icon","description","Component","MyMapComponent","withScriptjs","withGoogleMap","lib","defaultZoom","defaultCenter","lat","coords","lng","lon","center","isMarkerShown","position","coord","googleMapURL","loadingElement","style","height","containerElement","mapElement","List","items","handleCityClick","handleRemoveLocation","map","index","key","locationsList","removeLocation","classnames","active","onBlur","newList","toString","getWeatherByCoords","long","errors","getLocation","latitude","longitude","handleLocationError","loading","navigator","geolocation","getCurrentPosition","AutoCompleteDropDown","_useState","addLocation","useState","_useState2","slicedToArray","activeDropDown","setDropDown","_useState3","_useState4","country","setCountry","_useState5","_useState6","selectedCountry","setSelectedCountry","handleDropDownClick","filteredList","countryPlaceholder","opened","placeholder","value","onChange","e","target","autoFocus","alpha3Code","capital","selected","indexOf","Modal","setAppElement","showModal","locationList","setCity","react_modal_lib_default","isOpen","onRequestClose","contentLabel","closeTimeoutMS","forms_MyLocationButton","countriesList","handleAddLocation","initialState","combineReducers","arguments","undefined","objectSpread","push","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","rootReducer","Boolean","location","hostname","match","jsx","es","layout_Header","layout_MainContainer","layout_MapContainer","layout_Drawer","layout_LocationModal","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d5701ad6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loadingSpinner.c6902309.svg\";","export const setLoading = action => dispatch => {\r\n  dispatch({\r\n    type: \"SET_LOADING\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const showLeft = action => dispatch => {\r\n  dispatch({\r\n    type: \"SHOW_LEFT\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const setModal = action => dispatch => {\r\n  dispatch({\r\n    type: \"SHOW_MODAL\",\r\n    payload: action\r\n  });\r\n};\r\n","export const OWMurl = \"https://api.openweathermap.org/data/2.5/weather\";\r\nexport const OWMkey = \"cb8528b6f2cf632a85f5e8f1e9dc4a0b\";\r\nexport const gMapKey = \"AIzaSyDwPWp83c8aD086C5tLxD10kCErHt9lpTo&\";\r\n","export const addError = action => dispatch => {\r\n  dispatch({\r\n    type: \"ADD_ERRORS\",\r\n    payload: action\r\n  });\r\n\r\n  setTimeout(() => {\r\n    dispatch(clearErrors());\r\n  }, 6000);\r\n};\r\nexport const clearErrors = () => dispatch => {\r\n  dispatch({\r\n    type: \"CLEAR_ERRORS\"\r\n  });\r\n};\r\n","import { getWeatherByCity } from \"./weatherActions\";\r\n\r\nexport const removeLocation = action => dispatch => {\r\n  dispatch({\r\n    type: \"REMOVE_LOCATION\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const setLocationList = action => dispatch => {\r\n  dispatch({\r\n    type: \"SET_LOCATION_LIST\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const addLocationToList = action => dispatch => {\r\n  dispatch({\r\n    type: \"ADD_LOCATION\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const setCurrentLocation = action => dispatch => {\r\n  const locations = localStorage.locations || \"\";\r\n  const name = action.name.trim().toLowerCase();\r\n\r\n  if (!locations.includes(name)) {\r\n    //location is not added already;\r\n    localStorage.setItem(\"locations\", name + \",\" + locations);\r\n  }\r\n\r\n  dispatch(addLocationToList(name));\r\n\r\n  dispatch({\r\n    type: \"SET_CURRENT_LOCATION\",\r\n    payload: action\r\n  });\r\n};\r\n\r\nexport const addLocation = action => dispatch => {\r\n  // add location to localStorage\r\n\r\n  const name = action.trim().toLowerCase();\r\n\r\n  // dispatch(setCurrentLocation({ name, temp, description }));\r\n  dispatch(getWeatherByCity(name));\r\n\r\n  const locations = localStorage.locations || \"\";\r\n  if (locations.includes(name)) {\r\n    //location already added;\r\n    return;\r\n  }\r\n\r\n  localStorage.setItem(\"locations\", name + \",\" + locations);\r\n};\r\n","import { OWMurl, OWMkey } from \"./../config/keys\";\r\nimport Axios from \"axios\";\r\nimport { setLoading } from \"./layoutActions\";\r\nimport { addError } from \"./errorActions\";\r\nimport { setModal, showLeft } from \"./layoutActions\";\r\nimport { setCurrentLocation } from \"./locationActions\";\r\n\r\nexport const getWeatherByCity = city => dispatch => {\r\n  // http://api.openweathermap.org/data/2.5/weather?q=London&appid=cb8528b6f2cf632a85f5e8f1e9dc4a0b\r\n\r\n  dispatch(setLoading(true));\r\n\r\n  const url = OWMurl + \"?q=\" + city + \"&appid=\" + OWMkey + \"&units=metric\";\r\n\r\n  Axios.get(url)\r\n    .then(result => {\r\n      dispatch(setCurrentLocation(result.data));\r\n      dispatch(setModal(false));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(\r\n        addError({\r\n          mylocation: \"Could not retrieve weather data. Please try again.\"\r\n        })\r\n      );\r\n    })\r\n    .finally(() => {\r\n      dispatch(setLoading(false));\r\n      dispatch(showLeft(false));\r\n    });\r\n};\r\n\r\nexport const getWeatherByCoords = (lat, long) => dispatch => {\r\n  // http://api.openweathermap.org/data/2.5/weather?lat=54.5684244&lon=23.3565394&appid=cb8528b6f2cf632a85f5e8f1e9dc4a0b\r\n\r\n  dispatch(setLoading(true));\r\n  const url =\r\n    OWMurl +\r\n    \"?lat=\" +\r\n    lat +\r\n    \"&lon=\" +\r\n    long +\r\n    \"&appid=\" +\r\n    OWMkey +\r\n    \"&units=metric\";\r\n  Axios.get(url)\r\n    .then(result => {\r\n      dispatch(setModal(false));\r\n      dispatch(setCurrentLocation(result.data));\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch(\r\n        addError({\r\n          mylocation: \"Could not retrieve weather data. Please try again.\"\r\n        })\r\n      );\r\n    })\r\n    .finally(() => {\r\n      dispatch(setLoading(false));\r\n      dispatch(showLeft(false));\r\n      dispatch(setModal(false));\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport spinner from \"./../imgs/loadingSpinner.svg\";\r\n\r\nexport default function LoadingSpinner() {\r\n  return (\r\n    <div className=\"loadingSpinner\">\r\n      <img title=\"Loading spinner\" alt=\"Loading spinner\" src={spinner} />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { showLeft, setModal } from \"./../../actions/layoutActions\";\r\nimport { getWeatherByCity } from \"./../../actions/weatherActions\";\r\nimport LoadingSpinner from \"../forms/LoadingSpinner\";\r\n\r\nfunction Header({\r\n  showLeft,\r\n  setModal,\r\n  currentLocation,\r\n  getWeatherByCity,\r\n  isLoading\r\n}) {\r\n  let showingLocation;\r\n  if (Object.keys(currentLocation).length === 0) {\r\n    // check if there are any locations saved in localStorage\r\n    if (\r\n      typeof localStorage.locations !== \"undefined\" &&\r\n      localStorage.locations !== \"\"\r\n    ) {\r\n      const city = localStorage.locations.split(\",\")[0].toUpperCase();\r\n      getWeatherByCity(city);\r\n      showingLocation = <div>{currentLocation.name}</div>;\r\n    } else {\r\n      showingLocation = (\r\n        <div onClick={() => setModal(true)} className=\"textClickable\">\r\n          Click here to set location\r\n        </div>\r\n      );\r\n    }\r\n  } else {\r\n    showingLocation = currentLocation.name.toUpperCase();\r\n  }\r\n\r\n  const header = isLoading ? <LoadingSpinner /> : <div>{showingLocation}</div>;\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"iconButton\" onClick={() => showLeft(true)}>\r\n        <i className=\"fas fa-bars\" />\r\n      </div>\r\n      {header}\r\n      <div className=\"iconButton\" onClick={() => setModal(true)}>\r\n        <i className=\"fas fa-plus\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentLocation: state.locations.currentLocation,\r\n  isLoading: state.layout.isLoading\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { showLeft, setModal, getWeatherByCity }\r\n)(Header);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLocationList } from \"./../../actions/locationActions\";\r\n\r\nclass MainContainer extends Component {\r\n  componentDidMount() {\r\n    const list = localStorage.locations\r\n      ? localStorage.locations.split(\",\").filter(item => {\r\n          return item !== \"\";\r\n        })\r\n      : [];\r\n    this.props.setLocationList(list);\r\n  }\r\n\r\n  render() {\r\n    const { currentLocation } = this.props;\r\n    return (\r\n      <div className=\"mainContainer\">\r\n        {currentLocation.main && (\r\n          <div className=\"tempInfo\">{currentLocation.main.temp} °C</div>\r\n        )}\r\n        {currentLocation.weather && (\r\n          <div className=\"descInfo\">\r\n            <img\r\n              alt=\"Weather icon\"\r\n              src={`https://openweathermap.org/img/w/${\r\n                currentLocation.weather[0].icon\r\n              }.png`}\r\n            />\r\n            <span>{currentLocation.weather[0].description}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentLocation: state.locations.currentLocation\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setLocationList }\r\n)(MainContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { gMapKey } from \"./../../config/keys\";\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\n\r\nfunction MapContainer({ currentLocation }) {\r\n  return (\r\n    <div className=\"mapContainer\">\r\n      {currentLocation.coord && (\r\n        <MyMapComponent\r\n          isMarkerShown\r\n          googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${gMapKey}&v=3.exp&libraries=geometry,drawing,places`}\r\n          loadingElement={<div style={{ height: `100%` }} />}\r\n          containerElement={<div style={{ height: `400px` }} />}\r\n          mapElement={<div style={{ height: `100%` }} />}\r\n          coords={currentLocation.coord}\r\n        />\r\n      )}\r\n      {!currentLocation.coord && <div>Please add location to see map</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap(props => (\r\n    <GoogleMap\r\n      defaultZoom={12}\r\n      defaultCenter={{ lat: props.coords.lat, lng: props.coords.lon }}\r\n      center={{ lat: props.coords.lat, lng: props.coords.lon }}\r\n    >\r\n      {props.isMarkerShown && (\r\n        <Marker position={{ lat: props.coords.lat, lng: props.coords.lon }} />\r\n      )}\r\n    </GoogleMap>\r\n  ))\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  currentLocation: state.locations.currentLocation\r\n});\r\n\r\nexport default connect(mapStateToProps)(MapContainer);\r\n","import React from \"react\";\r\n\r\nexport default function List({ items, handleCityClick, handleRemoveLocation }) {\r\n  return (\r\n    <div className=\"list\">\r\n      {items.map((item, index) => {\r\n        return (\r\n          <div className=\"listItem\" key={index + item}>\r\n            <span onClick={() => handleCityClick(item)}>{item}</span>\r\n\r\n            <div\r\n              className=\"removeButton\"\r\n              onClick={() => handleRemoveLocation(item)}\r\n            >\r\n              <i className=\"fas fa-times\" />\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { showLeft } from \"../../actions/layoutActions\";\r\nimport { getWeatherByCity } from \"./../../actions/weatherActions\";\r\nimport {\r\n  addLocationToList,\r\n  removeLocation\r\n} from \"./../../actions/locationActions\";\r\nimport List from \"../forms/List\";\r\n\r\nfunction Drawer({\r\n  layout,\r\n  showLeft,\r\n  getWeatherByCity,\r\n  locationsList,\r\n  addLocationToList,\r\n  removeLocation\r\n}) {\r\n  const handleCityClick = city => {\r\n    getWeatherByCity(city);\r\n  };\r\n\r\n  const handleRemoveLocation = city => {\r\n    removeLocation(city);\r\n    const newList = locationsList.filter(item => {\r\n      return item.trim().toLowerCase() !== city.trim().toLowerCase();\r\n    });\r\n    localStorage.setItem(\"locations\", newList.toString());\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"drawer\", { active: layout.showLeft })}\r\n      onBlur={() => showLeft(false)}\r\n    >\r\n      <div className=\"drawer__header\">\r\n        <div className=\"drawer__close\" onClick={() => showLeft(false)}>\r\n          <i className=\"fas fa-arrow-left\" />\r\n        </div>\r\n        <div className=\"drawer__title\">Favorite locations</div>\r\n      </div>\r\n      <div className=\"drawer__body\">\r\n        {locationsList.length > 0 && (\r\n          <List\r\n            items={locationsList}\r\n            handleCityClick={handleCityClick}\r\n            handleRemoveLocation={handleRemoveLocation}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  layout: state.layout,\r\n  locationsList: state.locations.list\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { showLeft, getWeatherByCity, addLocationToList, removeLocation }\r\n)(Drawer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { getWeatherByCoords } from \"./../../actions/weatherActions\";\r\nimport { addError } from \"./../../actions/errorActions\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\n\r\nfunction MyLocationButton({ isLoading, errors, getWeatherByCoords, addError }) {\r\n  const getLocation = position => {\r\n    const lat = position.coords.latitude;\r\n    const long = position.coords.longitude;\r\n\r\n    getWeatherByCoords(lat, long);\r\n\r\n    // get location\r\n    // get name of location\r\n    // get weather info\r\n    // save location to favorites - localStorage and redux\r\n  };\r\n\r\n  const handleLocationError = () => {\r\n    addError({\r\n      mylocation: \"Could not retrieve location information from the browser.\"\r\n    });\r\n  };\r\n\r\n  const useMyLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(getLocation, handleLocationError);\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={classnames(\"myLocationButton\", { loading: isLoading })}\r\n      onClick={useMyLocation}\r\n    >\r\n      {isLoading && <LoadingSpinner />}\r\n      <div className=\"textContainer\">\r\n        <i className=\"fas fa-map-marker-alt\" />\r\n        <span>Use device location</span>\r\n      </div>\r\n    </button>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  isLoading: state.layout.isLoading\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getWeatherByCoords, addError }\r\n)(MyLocationButton);\r\n","import React, { useState } from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nexport default function AutoCompleteDropDown({ list, addLocation }) {\r\n  const [activeDropDown, setDropDown] = useState(false);\r\n  const [country, setCountry] = useState(\"\");\r\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n\r\n  const handleDropDownClick = () => {\r\n    setDropDown(!activeDropDown);\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    setCountry(\"\");\r\n  };\r\n\r\n  const handleInputChange = e => {\r\n    const value = e.target.value;\r\n    setCountry(value);\r\n  };\r\n\r\n  const handleAddClick = (city, country) => {\r\n    if (city !== \"\") {\r\n      // addLocation(city);\r\n      setSelectedCountry(country);\r\n    }\r\n    setDropDown(false);\r\n  };\r\n\r\n  const filteredList = list.filter(item => {\r\n    return item.name.toLowerCase().includes(country.toLowerCase());\r\n  });\r\n\r\n  const countryPlaceholder =\r\n    selectedCountry !== \"\" ? selectedCountry : \"Select country\";\r\n\r\n  return (\r\n    <div\r\n      className={classnames(\"autoCompleteDropDown\", { opened: activeDropDown })}\r\n    >\r\n      <button onClick={handleDropDownClick} className=\"selectButton\">\r\n        {countryPlaceholder} <i className=\"fas fa-caret-down\" />\r\n      </button>\r\n      <div className={classnames(\"dropDownContent\")}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Search country...\"\r\n          value={country}\r\n          className=\"dropDownSearch\"\r\n          onChange={handleInputChange}\r\n          autoFocus={true}\r\n          onBlur={handleDropDownClick}\r\n        />\r\n        <span\r\n          className={classnames(\"clearInput\", { active: country !== \"\" })}\r\n          onClick={handleClearClick}\r\n        >\r\n          <i className=\"fas fa-times\" />\r\n        </span>\r\n        <div className=\"resultsList\">\r\n          {filteredList.map(item => {\r\n            return (\r\n              <div\r\n                key={item.alpha3Code}\r\n                value={item.capital}\r\n                onClick={() => handleAddClick(item.capital, item.name)}\r\n                className={classnames({\r\n                  selected:\r\n                    item.capital !== \"\" &&\r\n                    typeof localStorage.locations !== \"undefined\" &&\r\n                    localStorage.locations.indexOf(item.capital.toLowerCase()) >\r\n                      -1\r\n                })}\r\n              >\r\n                {item.name}\r\n              </div>\r\n            );\r\n          })}\r\n          {filteredList.length === 0 && (\r\n            <div className=\"resultMessage\">No results.</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { connect } from \"react-redux\";\r\nimport { setModal } from \"./../../actions/layoutActions\";\r\nimport { addLocation } from \"./../../actions/locationActions\";\r\nimport { getWeatherByCity } from \"./../../actions/weatherActions\";\r\nimport MyLocationButton from \"../forms/MyLocationButton\";\r\nimport AutoCompleteDropDown from \"../forms/AutoCompleteDropDown\";\r\nimport countriesList from \"./../../data/countries.json\";\r\n\r\nfunction LocationModal({\r\n  showModal,\r\n  setModal,\r\n  addLocation,\r\n  getWeatherByCity,\r\n  errors\r\n}) {\r\n  const [city, setCity] = useState(\"\");\r\n\r\n  const handleAddLocation = city => {\r\n    getWeatherByCity(city);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={showModal}\r\n      onRequestClose={() => setModal(false)}\r\n      contentLabel=\"Selected Option\"\r\n      closeTimeoutMS={200}\r\n      className=\"modal\"\r\n    >\r\n      <div className=\"modal__header\">\r\n        <div className=\"modal__title\">Please select location</div>\r\n        <div className=\"modal__close\" onClick={() => setModal(false)}>\r\n          <i className=\"fas fa-times\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"modal__body\">\r\n        <div className=\"modal__left\">\r\n          <MyLocationButton />\r\n        </div>\r\n        <div className=\"modal__right\">\r\n          <AutoCompleteDropDown\r\n            list={countriesList}\r\n            addLocation={addLocation}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            value={city}\r\n            onChange={e => setCity(e.target.value)}\r\n            className=\"inputText\"\r\n            placeholder=\"Enter city name\"\r\n          />\r\n          <button onClick={() => handleAddLocation(city)}>Add</button>\r\n          {errors.mylocation && (\r\n            <div className=\"errorNotice\">{errors.mylocation}</div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nModal.setAppElement(\"#root\");\r\n\r\nconst mapStateToProps = state => ({\r\n  showModal: state.layout.showModal,\r\n  errors: state.errors,\r\n  locationList: state.locations.list\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { setModal, addLocation, getWeatherByCity }\r\n)(LocationModal);\r\n","const initialState = {};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_ERRORS\":\r\n      return { ...action.payload };\r\n    case \"CLEAR_ERRORS\":\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  showLeft: false,\r\n  showModal: false,\r\n  isLoading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_LOADING\":\r\n      return { ...state, isLoading: action.payload };\r\n    case \"SHOW_LEFT\":\r\n      return { ...state, showLeft: action.payload };\r\n    case \"SHOW_MODAL\":\r\n      return { ...state, showModal: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  currentLocation: {},\r\n  list: []\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SET_CURRENT_LOCATION\":\r\n      return { ...state, currentLocation: action.payload };\r\n    case \"SET_LOCATION_LIST\":\r\n      return { ...state, list: action.payload };\r\n    case \"ADD_LOCATION\":\r\n      if (state.list.includes(action.payload)) {\r\n        return state;\r\n      } else {\r\n        const newList = state.list;\r\n        newList.push(action.payload);\r\n        return { ...state, list: newList };\r\n      }\r\n\r\n    case \"REMOVE_LOCATION\":\r\n      const newList = state.list.filter(item => {\r\n        return (\r\n          item.trim().toLowerCase() !== action.payload.trim().toLowerCase()\r\n        );\r\n      });\r\n      return { ...state, list: newList };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport errorsReducer from \"./errorsReducer\";\r\nimport layoutReducer from \"./layoutReducer\";\r\nimport locationsReducer from \"./locationsReducer\";\r\n\r\nexport default combineReducers({\r\n  layout: layoutReducer,\r\n  locations: locationsReducer,\r\n  errors: errorsReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst composeEnhancers =\r\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(...middleware)\r\n  // other store enhancers if any\r\n);\r\nconst store = createStore(rootReducer, initialState, enhancer);\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./styles/styles.scss\";\n\nconst jsx = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nReactDOM.render(jsx, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport \"./styles/styles.scss\";\nimport Header from \"./../src/components/layout/Header\";\nimport MainContainer from \"./components/layout/MainContainer\";\nimport MapContainer from \"./components/layout/MapContainer\";\nimport Drawer from \"./components/layout/Drawer\";\nimport LocationModal from \"./components/layout/LocationModal\";\n\nexport default function App() {\n  return (\n    <div className=\"rootContainer\">\n      <Header />\n      <MainContainer />\n      <MapContainer />\n      <Drawer />\n      <LocationModal />\n    </div>\n  );\n}\n"],"sourceRoot":""}